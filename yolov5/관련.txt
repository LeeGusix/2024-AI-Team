Visual Studio Code에서 YOLOv5 학습시키는 방법
YOLOv5 프로젝트 열기:

YOLOv5 프로젝트 폴더를 Visual Studio Code에서 엽니다.
데이터셋 정의 파일 수정: 데이터셋 정보를 담고 있는 YAML 파일을 수정합니다. 보통 data/ 폴더에 저장됩니다.

수정할 YAML 파일: 예: data/my_dataset.yaml
파일 내용:
path: ../dataset  # 데이터셋의 루트 디렉토리
train: images/train  # 학습 데이터 경로 (path를 기준으로 상대 경로)
val: images/val      # 검증 데이터 경로 (path를 기준으로 상대 경로)
test: images/test    # 테스트 데이터 경로 (선택 사항)
nc: 403              # 클래스 개수
names:               # 클래스 이름
  - class1
  - class2
  - class3
  ...
중요:

path는 데이터셋의 루트 디렉토리입니다.
train, val, test는 각각 학습, 검증, 테스트 이미지가 포함된 경로를 지정합니다.
nc는 클래스 개수를 설정합니다.
names는 클래스 이름 리스트를 작성합니다.
모델 설정 파일 선택: YOLOv5 모델의 구조는 models/ 디렉토리의 YAML 파일로 정의됩니다. 기본적으로 다음 중 하나를 선택할 수 있습니다:

models/yolov5s.yaml: Small 모델
models/yolov5m.yaml: Medium 모델
models/yolov5l.yaml: Large 모델
models/yolov5x.yaml: Extra Large 모델
필요하면 새로운 YAML 파일을 만들어 커스터마이징할 수도 있습니다.

학습 스크립트 실행 설정: Visual Studio Code에서 train.py를 수정하거나, 터미널에서 명령줄 옵션을 제공합니다.

명령줄 실행 예제 (VS Code 터미널에서):

python train.py --img 640 --batch 16 --epochs 50 --data data/my_dataset.yaml --cfg models/yolov5s.yaml --weights yolov5s.pt
--img: 입력 이미지 크기 (기본값: 640).
--batch: 배치 크기.
--epochs: 학습 반복 횟수.
--data: 데이터셋 정의 YAML 파일 경로.
--cfg: 모델 정의 YAML 파일 경로.
--weights: 사전 학습 가중치 (기본값: yolov5s.pt).
경로 확인 및 수정:

학습 데이터 경로가 올바르게 설정되었는지 확인하세요.
디렉토리 구조는 다음과 같은 형태여야 합니다:
dataset/
├── images/
│   ├── train/
│   ├── val/
│   └── test/
└── labels/
    ├── train/
    ├── val/
    └── test/
이미지 데이터와 동일한 하위 디렉토리에 .txt 라벨 파일이 있어야 합니다.
실행 및 디버깅:

VS Code에서 train.py를 열고 상단의 Run and Debug 버튼을 클릭합니다.
필요한 학습 옵션은 train.py의 main 함수 부분에서 직접 설정하거나, 명령줄 인수를 추가로 제공합니다.
-----------------------------------------------------------------------------------------------

python train.py --img 1280 --batch 8 --epochs 100 --data data/data.yaml --cfg models/yolov5m.yaml --weights test1.pt


python train.py --data data/data.yaml --cfg models/yolov5s.yaml --weights '' --img 640 --batch 16 --epochs 100 --device 0

small
python train.py --data data/data.yaml --cfg models/yolov5m.yaml --weights yolov5s.pt --img 640 --batch 16 --epochs 100 --device 0

medium
python train.py --data data/data.yaml --cfg models/yolov5m.yaml --weights yolov5m.pt --img 640 --batch 16 --epochs 100 --device 0

-----------------------------------------------------------------------------------------------


PS G:\WorkBench\Git\2024-AI-Team\yolov5> python train.py --data data/data.yaml --cfg models/yolov5s.yaml --weights yolov5s.pt --img 640 --batch 8 --epochs 50 --device 0  
train: weights=yolov5s.pt, cfg=models/yolov5s.yaml, data=data/data.yaml, hyp=data\hyps\hyp.scratch-low.yaml, epochs=50, batch_size=8, imgsz=640, rect=False, resume=False, nosave=False, noval=False, noautoanchor=False, noplots=False, evolve=None, evolve_population=data\hyps, resume_evolve=None, bucket=, cache=None, image_weights=False, device=0, multi_scale=False, single_cls=False, optimizer=SGD, sync_bn=False, workers=8, project=runs\train, name=exp, exist_ok=False, quad=False, cos_lr=False, label_smoothing=0.0, patience=100, freeze=[0], save_period=-1, seed=0, local_rank=-1, entity=None, upload_dataset=False, bbox_interval=-1, artifact_alias=latest, ndjson_console=False, ndjson_file=False
github: skipping check (not a git repository), for updates see https://github.com/ultralytics/yolov5
YOLOv5  2024-11-23 Python-3.12.7 torch-2.5.1+cu124 CUDA:0 (NVIDIA GeForce RTX 4070 Ti, 12282MiB)

hyperparameters: lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=0.05, cls=0.5, cls_pw=1.0, obj=1.0, obj_pw=1.0, iou_t=0.2, anchor_t=4.0, fl_gamma=0.0, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.0, copy_paste=0.0
TensorBoard: Start with 'tensorboard --logdir runs\train', view at http://localhost:6006/
COMET WARNING: Comet credentials have not been set. Comet will default to offline logging. Please set your credentials to enable online logging.
COMET INFO: Using 'G:\\WorkBench\\Git\\2024-AI-Team\\yolov5\\.cometml-runs' path as offline directory. Pass 'offline_directory' parameter into constructor or set the 'COMET_OFFLINE_DIRECTORY' environment variable to manually choose 
where to store offline experiment archives.
Overriding model.yaml nc=80 with nc=100

                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1    283185  models.yolo.Detect                      [100, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
YOLOv5s summary: 214 layers, 7289329 parameters, 7289329 gradients, 16.8 GFLOPs

Transferred 342/349 items from yolov5s.pt
G:\WorkBench\Git\2024-AI-Team\yolov5\models\common.py:892: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with amp.autocast(autocast):
G:\WorkBench\Git\2024-AI-Team\yolov5\models\common.py:892: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with amp.autocast(autocast):
AMP: checks passed 
optimizer: SGD(lr=0.01) with parameter groups 57 weight(decay=0.0), 60 weight(decay=0.0005), 60 bias